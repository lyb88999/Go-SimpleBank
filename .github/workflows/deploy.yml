name: Deploy to production

on:
  push:
    branches: [ "main" ]


jobs:

  deploy:
    name: Build image and push to ACR
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.28.9' # default is latest stable
        id: install

      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          region-id: 'cn-hangzhou' # example: cn-hangzhou
          access-key-id: ${{secrets.ACR_ACCESS_KEY_ID}}
          access-key-secret: ${{secrets.ACR_ACCESS_KEY_SECRET}}


      - name: Load secrets FROM HCP and save to app.env
        env:
          HCP_CLIENT_ID: ${{secrets.HCP_CLIENT_ID}}
          HCP_CLIENT_SECRET: ${{secrets.HCP_CLIENT_SECRET}}
        run: |
          # Get HCP_API_TOKEN using HCP_CLIENT_ID and HCP_CLIENT_SECRET
          HCP_API_TOKEN=$(curl --location "https://auth.idp.hashicorp.com/oauth2/token" \
          --header "Content-Type: application/x-www-form-urlencoded" \
          --data-urlencode "client_id=$HCP_CLIENT_ID" \
          --data-urlencode "client_secret=$HCP_CLIENT_SECRET" \
          --data-urlencode "grant_type=client_credentials" \
          --data-urlencode "audience=https://api.hashicorp.cloud" | jq -r .access_token)
          
          # Fetch secrets from HCP and save to app.env
          curl --location "https://api.cloud.hashicorp.com/secrets/2023-06-13/organizations/9737139a-ce76-441c-89e9-8a12bc1cc3ce/projects/1ac5ceef-b411-48e1-9705-5d304054be9a/apps/simple-bank/open" \
          --request GET \
          --header "Authorization: Bearer $HCP_API_TOKEN" | \
          jq -r '.[][] | select(.name and .version.value) | "\(.name)=\(.version.value)"' > app.env

      - name: Display app.env file
        run: cat app.env

      - name: Build and push image
        env:
          ACR_REGISTRY: registry.cn-hangzhou.aliyuncs.com/udemy
          ACR_REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |

          docker build -t $ACR_REGISTRY/$ACR_REPOSITORY:$IMAGE_TAG -t $ACR_REGISTRY/$ACR_REPOSITORY:latest .


      - name: Update kube config
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_CONTENT" > $HOME/.kube/config
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}

      - name: Deploy image to AKS
        run: |
          kubectl apply -f ack/deployment.yml
          kubectl apply -f ack/service.yml